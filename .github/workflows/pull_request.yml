on:
  pull_request:
    branches:
    - main
  workflow_dispatch:
name: Pull Request
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        nextflow_version: ["21.04.3", "23.10.1"]
    name: Run tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: create artifacts dir to save test logs
      env:
        NXF_VER: ${{ matrix.nextflow_version }}
      run: mkdir artifacts
    - name: Install Miniconda
      env:
        NXF_VER: ${{ matrix.nextflow_version }}
      run: bash .github/scripts/install_conda.sh
    - name: Install Nextflow
      env:
        NXF_VER: ${{ matrix.nextflow_version }}
      run: bash .github/scripts/install_nextflow.sh
    - name: Create ART Read-Simulation Environment
      run: bash .github/scripts/create_art_environment.sh
    - name: Download Assemblies
      run: bash .github/scripts/download_assemblies.sh
    - name: Simulate Reads
      run: bash .github/scripts/simulate_reads.sh
    - name: Run Pipeline
      run: bash .github/scripts/run_pipeline.sh
    - name: Check Outputs
      run: .github/scripts/check_outputs.py --pipeline-outdir .github/data/test_output
    - name: Prepare Artifacts
      if: always()
      run: bash .github/scripts/prepare_artifacts.sh
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      if: always()
      env:
        NXF_VER: ${{ matrix.nextflow_version }}
      with:
        name: artifacts-nextflow-${{ matrix.nextflow_version }}-${{ env.RUN_UNIQUE_ID }}
        path: artifacts
